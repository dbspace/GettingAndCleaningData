mean(1,5)
mean(1:5)
apropos("vector")
RSiteSearch("{Bayesian regression}")
sd(0:100)
demo(plotmath)
median(1, 2, 3, 4, 5)
-2:2 * -2:2
none_true <- c(FALSE, FALSE, FALSE)
any(none_true)
any(none_true)
none_true <- c(FALSE, FALSE, FALSE) some_true <- c(FALSE, TRUE, FALSE) all_true <- c(TRUE, TRUE, TRUE) any(none_true)
none_true <- c(FALSE, FALSE, FALSE)
any(none_true)
?Trig
browseENV()
browseEnv()
pets <- factor(sample(    c("dog", "cat", "hamster", "goldfish"), 1000,    replace = TRUE))
pets <- factor(sample(    c("dog", "cat", "hamster", "goldfish"), 1000,    replace = TRUE))
pets <- factor(sample(c("dog", "cat", "hamster", "goldfish"), 1000, replace = TRUE))
head(pets)
summary(pets)
summary(pets)
a_matrix[1, c("zwei", "drei")]
data()
data("kidney", package = "survival")
head(kidney)
data(package = .packages(all.available = TRUE))
install.packages("KernSmooth")
library(KernSmooth)
setwd("~/projects/Coursera")
getwd()
setwd("~/projects/Coursera/GettingAndCleaningData")
datasetPath <- 'UCIHARDataset'
#Set the location of all the files
featuresFile <- file.path(datasetPath, 'features.txt')
labelFile <- file.path(datasetPath, 'activity_labels.txt')
trainLabelFile <- file.path(datasetPath, 'train/y_train.txt')
trainSetFile <- file.path(datasetPath, 'train/X_train.txt')
trainSubject <- file.path(datasetPath, 'train/subject_train.txt')
testLabelFile <- file.path(datasetPath, 'test/y_test.txt')
testSetFile <- file.path(datasetPath, 'test/X_test.txt')
testSubjectFile <- file.path(datasetPath, 'test/subject_test.txt')
features <- read.table(featuresFile)
head(features)
trainSet <- read.table(trainSetFile)
head(trainSet)
dfeatures <- grep("std|mean", features$V2)
head(dfeatures)
str(dfeatures)
str(features)
?grep
features[41]
features[$V1=41]
features[41,]
trainSubjectFile <- file.path(datasetPath, 'train/subject_train.txt')
trainSubject <- read.table(trainSubjectFile)
str(trainSubject)
head(trainSubject)
head(trainSet)
str(trainSet)
trainLabel <- read.table(trainLabelFile)
str(trainLabel)
str(trainSubject)
trainData <- cbind(trainLabel,trainSubject,trainSet)
str(trainData)
testSet <- read.table(testSetFile)
testSet <- read.table(testSetFile)
testSubject <- read.table(testSubjectFile)
testLabel <- read.table(testLabelFile)
testData <- cbind(testLabel,testSubject,testSet)
label <- read.table(labelFile)
label <- read.table(labelFile)
head(label)
str(testData)
combineData <- rbind(trainData, testData)
combineData <- rbind(trainData, testData)
features1 <- features[2]
head(features1)
colnames(features1) <-'features'
labels <- rbind(data.frame(c("labels", "subject")), features1)
labels <- rbind(data.frame(features1=c("labels", "subject")), features1)
features1 <- rbind(data.frame(features1=c("labels", "subject")), features1)
features <- features[2]
colnames(features) <-'features'
features <- rbind(data.frame(features=c('labels','subject')),features)
features
features <- read.table(featuresFile)
features
features <- features[2]
feacures
features
head(features)
colnames(features) <- "labelName"
head(features)
data.frame(lableName=c('label', 'subject'))
colnames(features) <- "colLabel"
colnames(features) <- "colLabel"
colLabel <- rbind(data.frame(colLabel=c('label', 'subject')), features)
colLabel
dfeatures <- grep("std|mean", colLabel$colLabel)
dfeatures
features <- read.table(featuresFile)
dfeatures1 <- grep("std|mean", features$V2)
dfeatures1
str(dfeatures)
str(dfeatures1)
dfeatures <- grep("std|mean|label|subject", colLabel$colLabel)
dfeatures <- grep("std|mean|label|subject", colLabel$colLabel)
dfeatures
dcolumns <- grep("std|mean|label|subject", colLabel$colLabel)
names(combineData)<-colLabel[1:563,]
head(combineData)
meanStdData <- combineData[, dcolumns]
head(meanStdData)
labels
label
?factor
combineData$label
unique(combineData$label)
unique(combineData$subject)
combineData$label <- factor(combineData$label, levels=label[,1], labels=label[,2])
meanStdData
meanStdData$label <- factor(meanStdData$label, levels=label[,1], labels=label[,2])
splitData<-split(meanStdData,list(meanStdData$subject,meanStdData$label))
splitData<-split(meanStdData,list(meanStdData$subject,meanStdData$label))
mytidyData<-sapply(splitData, function(x) colMeans(x[3:length(names(meanStdData))]))
mytidyData
str(mytidyData)
name(mytidyData)
names(mytidyData)
names(splitdata)
names(splitData)
head(splitData)
str(splitData)
str(splitData)
summary(splitData)
dim(mytidyData)
names(mytidyData)
names(splitData)
names(meanStdData)
summary(mytidyData)
write.table(mytidyData, "tidyData.txt", row.names=FALSE)
#Set dataset path relative to the working directory,
#The data set is unzip and remove the space
datasetPath <- 'UCIHARDataset'
#Set the location of all the files
featuresFile <- file.path(datasetPath, 'features.txt')
labelFile <- file.path(datasetPath, 'activity_labels.txt')
trainLabelFile <- file.path(datasetPath, 'train/y_train.txt')
trainSetFile <- file.path(datasetPath, 'train/X_train.txt')
trainSubjectFile <- file.path(datasetPath, 'train/subject_train.txt')
testLabelFile <- file.path(datasetPath, 'test/y_test.txt')
testSetFile <- file.path(datasetPath, 'test/X_test.txt')
testSubjectFile <- file.path(datasetPath, 'test/subject_test.txt')
# read the train data
trainSet <- read.table(trainSetFile)
trainSubject <- read.table(trainSubjectFile)
trainLabel <- read.table(trainLabelFile)
trainData <- cbind(trainLabel,trainSubject,trainSet)
# read the test data
testSet <- read.table(testSetFile)
testSubject <- read.table(testSubjectFile)
testLabel <- read.table(testLabelFile)
testData <- cbind(testLabel,testSubject,testSet)
#Finish 1 merges the training and the test data set in one
combineData <- rbind(trainData, testData)
#read features
features <- read.table(featuresFile)
#read label
label <- read.table(labelFile)
#create the column label for dataset
features <- features[2]
colnames(features) <- "colLabel"
colLabel <- rbind(data.frame(colLabel=c('label', 'subject')), features)
#name the columns of combineData
names(combineData)<-colLabel[1:563,]
#get the desire columns (std and mean, including the label and subject)
dcolumns <- grep("std|mean|label|subject", colLabel$colLabel)
#getting the data that contains only mean and std
#Finish 2 Extracts only the measurements on mean and std
meanStdData <- combineData[, dcolumns]
#Factor meanStdData with loaded Labels
#Finish 3 Uses descriptive activity names
meanStdData$label <- factor(meanStdData$label, levels=label[,1], labels=label[,2])
#Finish 4 use appropriately labels with descriptive name
# meanStdData have the appropriately labels with descriptive name
# because we subset from combineData
#split meanStdData by subject.label and assign to splitData
splitData<-split(meanStdData,list(meanStdData$subject,meanStdData$label))
#create tidy data with the mean of every variable
mytidyData<-sapply(splitData, function(x) colMeans(x[3:length(names(meanStdData))]))
#Set dataset path relative to the working directory,
#The data set is unzip and remove the space
datasetPath <- 'UCIHARDataset'
#Set the location of all the files
featuresFile <- file.path(datasetPath, 'features.txt')
labelFile <- file.path(datasetPath, 'activity_labels.txt')
trainLabelFile <- file.path(datasetPath, 'train/y_train.txt')
trainSetFile <- file.path(datasetPath, 'train/X_train.txt')
trainSubjectFile <- file.path(datasetPath, 'train/subject_train.txt')
testLabelFile <- file.path(datasetPath, 'test/y_test.txt')
testSetFile <- file.path(datasetPath, 'test/X_test.txt')
testSubjectFile <- file.path(datasetPath, 'test/subject_test.txt')
# read the train data
trainSet <- read.table(trainSetFile)
trainSubject <- read.table(trainSubjectFile)
trainLabel <- read.table(trainLabelFile)
trainData <- cbind(trainLabel,trainSubject,trainSet)
# read the test data
testSet <- read.table(testSetFile)
testSubject <- read.table(testSubjectFile)
testLabel <- read.table(testLabelFile)
testData <- cbind(testLabel,testSubject,testSet)
#Finish 1 merges the training and the test data set in one
combineData <- rbind(trainData, testData)
#read features
features <- read.table(featuresFile)
#read label
label <- read.table(labelFile)
#create the column label for dataset
features <- features[2]
colnames(features) <- "colLabel"
colLabel <- rbind(data.frame(colLabel=c('label', 'subject')), features)
#name the columns of combineData
names(combineData)<-colLabel[1:563,]
#get the desire columns (std and mean, including the label and subject)
dcolumns <- grep("std|mean|label|subject", colLabel$colLabel)
#getting the data that contains only mean and std
#Finish 2 Extracts only the measurements on mean and std
meanStdData <- combineData[, dcolumns]
#Factor meanStdData with loaded Labels
#Finish 3 Uses descriptive activity names
meanStdData$label <- factor(meanStdData$label, levels=label[,1], labels=label[,2])
#Finish 4 use appropriately labels with descriptive name
# meanStdData have the appropriately labels with descriptive name
# because we subset from combineData
#split meanStdData by subject.label and assign to splitData
splitData<-split(meanStdData,list(meanStdData$subject,meanStdData$label))
#create tidy data with the mean of every variable
mytidyData<-sapply(splitData, function(x) colMeans(x[3:length(names(meanStdData))]))
str(mytidyData)
mytidydata
mytidyData
head(mytidyData)
?aggregate
tidyData <- aggregate(meanStdData[, 3:81],
by = list(meanStdData$subject, meanStdData$label), FUN = mean))
tidyData <- aggregate(meanStdData[, 3:81],
by = list(meanStdData$subject, meanStdData$label), FUN = mean)
str(tidyData)
head(tidyData)
colnames(tidyData)[1:2] <- c("subject", "activity")
head(tidyData)
write.table(tidyData, "tidyData.txt", row.names=FALSE)
str(tidyData)
